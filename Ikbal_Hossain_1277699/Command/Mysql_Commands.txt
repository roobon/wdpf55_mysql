**** DDL => Data defination Language (CREATE, ALTER, DROP) ****
.................................................................

1. SHOW DATABASES;
2. CREATE DATABASE COLLEGE;
3. DROP DATABASE COLLEGE;

### Create Table ###
......................

CREATE TABLE students
(
Roll int,
Name varchar(50),
Gender varchar(6),
Age int,
GPA double(3, 2),
City varchar (15),    
PRIMARY KEY AUTO_INCREMENT(Roll)

);

*** DML => Data Manipulation Language(INSERT, SELECT, UPDATE, DELETE) ***
...........................................................................

### Create Table from any place ###
.....................................
CREATE TABLE college.students
(
Roll int,
Name varchar(50),
Gender varchar(6),
Age int,
GPA double(3, 2),
City varchar (15),    
PRIMARY KEY AUTO_INCREMENT(Roll)

);

or

CREATE TABLE college.students_details
(
Roll int PRIMARY KEY,
Name varchar(50),
Gender varchar(6),
Age int,
GPA double(3, 2),
City varchar (15)
);


### Rename Table ###
.....................
RENAME TABLE students TO students_details;


### Drop Table ###
......................
DROP TABLE student_details;

DROP TABLES person1, person2;



### Insert data into Table ###
................................
INSERT INTO students_details
(Roll, Name, Gender, Age, GPA, City)
VALUES(101, "Rahim", "Male", 18, 3.44, "Sylhet");

or,

INSERT INTO students_details

VALUES(103, "Tanzim", "Female", 23, 3.00, "Dhaka");


### Insert multiple data into table from any place ###
.......................................................
INSERT INTO college.students_details
(Roll, Name, Gender, Age, GPA, City)
VALUES
(101, "Akib", "Male", 35, 3.30, "Dhaka"),
(102, "Tanzim", "Female", 18, 3.00, "Dhaka"),
(103, "Ikbal", "Male", 30, 3.14, "Dhaka"),
(104, "Walid", "Male", 18, 3.25, "Dhaka");


or,

INSERT INTO college.students_details

VALUES
(101, "Akib", "Male", 35, 3.30, "Dhaka"),
(102, "Tanzim", "Female", 18, 3.00, "Dhaka"),
(103, "Ikbal", "Male", 30, 3.14, "Dhaka"),
(104, "Onu", "Male", 25, 3.25, "Luxmipur"),
(105, "Nusrat", "Female", 27, 3.43, "Dhaka"),
(106, "Tapsera", "Female", 28, 3.20, "Luxmipur"),
(107, "Tahamina", "Female", 27, 3.05, "Dhaka"),
(108, "Naomi", "Female", 27, 3.20, "Dhaka");

................................
### Find Records with Select ###
................................

For Single Column => SELECT Name FROM students_details;
....................
For Multiple Column => SELECT Name, Gender, GPA FROM students_details;
......................

For Multiple Column from anywhere => 
.....................................
SELECT Name, Gender, GPA FROM college.students_details;

For all Column from anywhere => SELECT * FROM college.students_details;
................................

........................
DISTINCT, LIMIT Keyword
........................

SELECT DISTINCT City FROM college.students_details; =>  only show not repeated city
.......................................................

SELECT * FROM college.students_details LIMIT 5; => first 5 records will show
.................................................

SELECT * FROM college.students_details LIMIT 2, 5; => show records 3 to 7 . LIMIT(2, 5) => drop first 2 records then show next 5 records
.....................................................



................
### Sorting ###
................

SELECT name 
FROM students_details 
ORDER BY name

Here.
SELECT (which column I want to show) FROM (database) ORDER BY (which column order will be applied) => by default ascending order



SELECT *
FROM students_details 
ORDER BY name, city DESC;

Here, name column will be sorted. the first column after written ORDER BY that will be sorted first.



..............................
### Arithmetic Operation ###
..............................

SELECT 5 + 2; 
SELECT 5 - 2; 
SELECT 5 * 2;
SELECT 5 / 2;
SELECT 5 % 2;



.....................
### where Clause ###
.....................
SELECT (column_list)
FROM (table_name)
WHERE (condition);


SELECT Name, City FROM college.students_details WHERE Gender = "Female";
// note: sql is not case sensitive

*** To avoid duplicate value use => DISTINCT

SELECT DISTINCT City FROM students_details WHERE Gender = "Male"; 

SELECT DISTINCT Name, City FROM students_details WHERE Gender = "Male" ORDER BY Name DESC; 


SELECT Name, Gender, Age FROM students_details WHERE Age < 29 ORDER BY Age ASC;


.....................
Relational Operators
.....................

SELECT Roll, Name, GPA FROM students_details WHERE Roll BETWEEN 102 AND 105;

SELECT Roll, Name, GPA FROM students_details WHERE Roll != 102;
// when use !=, you can't add more than one value, if you add only first one will be showed


......................................
Logical Operator(AND OR IN NOT LIKE)
......................................

SELECT * FROM students_details WHERE Gender = "Male" OR GPA >= 3.20;
// Here, all male and the female who have GPA >= 3.20 will be showed    

SELECT * FROM students_details WHERE Gender = "Male" AND GPA >= 3.30; 
// Here, the man who have GPA >= 3.20 will be showed. Both condition have to be fulfilled

SELECT * FROM students_details WHERE Age <= 25 AND (Gender = "Female" OR GPA >= 3.30);




...............
### Update ###
...............

UPDATE `students_details` SET `Gender` = 'Female' WHERE `students_details`.`Roll` = 108;

















### Data Type
....................

*** Numeric data type

1. SMALLINT
2. INT
3. BIGINT

1. FLOAT
2. DOUBLE(M, D)   exmple: 4.44 => total digit = 3 & after decimal digit = 2
3. DECIMAL(M, D)

*** Character Type

1. Char(m)
2. Varchar(m) m = character length(20) if you put only 5 character although your limit 20. it will take space that you have write 
3. text

*** Date and Time data type

1. YEAR (YYYY)
2. DATE (YYYY-MM-DD)
3. TIME (HH:MM:SS)

*** Some other data type

1. BLOB  => Binary Large Object => for Image, Audio
2. LOGICAL => for true, false, yes, no


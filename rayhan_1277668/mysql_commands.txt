mysql -h localhost -u root -p
show databases;
create database wdpf55_test;
show databases;
use wdpf55_test;
DROP DATABASE wdpf55_test;
show databases;
use php_oop_crud;
show tables;
describe members; // table

CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  address VARCHAR(200) NULL,
  phone VARCHAR(20) NOT NULL,
  dob DATE	
) ENGINE=INNODB;



//INSERT Query into table
INSERT INTO users (id, name, address, phone, dob) VALUES (
	NULL, 'Masum', 'Mirpur', '0147523698', '2015-05-03'
)
INSERT INTO users VALUES (
	NULL, 'Rojoni', 'Mirpur', '0147523698', '2015-05-03'
)



//SELECT Query
SELECT * FROM users; // all fields
SELECT id, name, address FROM users; // selected fields



============== Alter =============

1. ALTER TABLE Customers
   ADD Email varchar(255);  					= add column.


2.  ALTER TABLE persons
    CHANGE COLUMN email email_address VARCHAR(50) ;		= rename column.




3. CREATE TABLE Orders (
    orderID INT PRIMARY KEY AUTO_INCREMENT,
    orderNumber INT NOT NULL,					= make relation with primary and foreign key.		
    personID INT NOT NULL,
	FOREIGN KEY (personID) REFERENCES persons(PersonID)
    
    );





4. SELECT DISTINCT jobTitle FROM employees;			= distinct returns only different value.



5. SELECT * FROM employees WHERE officeCode='1' OR officeCode='2';	= 





CREATE DATABASE databasename;

#### Relationship  ##############
CREATE TABLE orders (
   orderid INT PRIMARY KEY AUTO_INCREMENT,
    ordernumber INT NOT NULL,
    personid INT NOT NULL,
    FOREIGN KEY (personid) REFERENCES persons(PersonID)
);


##### UNIQUE or No duplicate #######
ALTER TABLE persons						= make column unique
ADD UNIQUE(email_address);



CREATE TABLE Persons1 (
    ID int NOT NULL,
    LastName varchar(255) NOT NULL,
    FirstName varchar(255),
    Age int,
    City varchar(255) DEFAULT 'Dhaka'
);



CREATE INDEX fnameindex
ON persons(FirstName)

SELECT * FROM employees

SELECT `employeeNumber`, `lastName`, `firstName`, `email` FROM `employees`

SELECT `employeeNumber`, `lastName`, `firstName`, `email`, jobTitle FROM `employees` WHERE employeeNumber=1056; 

SELECT `employeeNumber`, `lastName`, `firstName`, `email`, jobTitle FROM `employees` WHERE lastName='Patterson'; 

SELECT `employeeNumber`, `lastName`, `firstName`, `email`, jobTitle FROM `employees` WHERE jobTitle='Sales Rep'; 

SELECT DISTINCT officeCode FROM `employees`; 
SELECT * FROM `employees` WHERE officeCode='1'

SELECT * FROM `employees` WHERE officeCode='1' OR officeCode='2'; 

SELECT * FROM `employees` WHERE officeCode BETWEEN 1 AND 3;

SELECT * FROM `employees` ORDER BY employeeNumber desc; 

SELECT * FROM `employees` ORDER BY lastName, firstName; 

UPDATE employees SET lastName='Ahmed', firstName='Masum', email='masum@gmail.com' WHERE employeeNumber=1002






=============================== PHP Mysql ==============================================

1.  extract($_POST) ; 			=  form er shob variable niye neya hoye jabe.

2. echo $myDB->affected_rows ;        // koyta data insert hoilo dekhabe

3. $result->num_rows 			= show number of rows


* diff betwwen CHAR vs VARCHAR




==================================  Authentication Doc ===================================

1. connect the DB ( check if it has users, if not input some users )

2.  connect index page / login form with login page through action

3. connect db-config with login page,  chech email & password is set, give query, fetch data , start session





==================================== Securing MySQL ==========================================

*** take necessary action for MySQL user authorization & authentication ***
** Grant = give permission ,	revoke = remove permission **



create user 'masum'@'localhost'identified by 'abc123'			= mysql user created
mysql -h localhost -u masum -p						= command for user login
grant select, insert on wdpf_55.* to 'masum'@'localhost';		= masum user wdpf_55 database er shob table select , insert korte parbe
grant select, insert on wdpf_55.* to 'masum'@'localhost';		( to give this command you need to login as root user )





=================================== MySQL trigger ==============================================

// use case of trigger

* order/stock remaining er jonno trigger use kora hoy.
* user tracking /  order tracking
* audit  


// trigger command insert

CREATE TRIGGER after_students_insert				
    AFTER INSERT ON students					
    FOR EACH ROW 
 INSERT INTO students_audit
 SET 
     student_id = NEW.id,
     student_name = NEW.name ,
     action = 'insert' ;



// trigger command update

CREATE TRIGGER after_students_update				
    AFTER UPDATE ON students					
    FOR EACH ROW 
 INSERT INTO students_audit
 SET 
     student_id = OLD.id,
     student_name = OLD.name ,
     action = 'update' ;




// trigger command delete

CREATE TRIGGER after_students_delete				
    AFTER DELETE ON students					
    FOR EACH ROW 
 INSERT INTO students_audit
 SET 
     student_id = OLD.id,
     student_name = OLD.name ,
     action = 'delete' ;






// product order 


CREATE TRIGGER after_orders_insert				
    AFTER INSERT ON orders					
    FOR EACH ROW 
 UPDATE products
 SET 
     ProductAmount = ProductAmount - NEW.ProductAmount 				
     WHERE products.ProductID = NEW.ProductID  ;
     

*** left side product table | right side order table ***
     




// create table

CREATE TABLE students_audit(
 id int AUTO_INCREMENT PRIMARY KEY,
 student_id int NOT NULL,
 student_name VARCHAR(100),
 action VARCHAR(10),
 date DATETIME DEFAULT CURRENT_TIMESTAMP
)




======================================  MySQL View ==============================================
*database = wdpf55_sample


1. 	SELECT * FROM customers WHERE city = 'Madrid' OR city='paris';				= view both city result



2. 	SELECT customers.customerNumber , customerName, phone, city orderNumber, orderDate, status FROM customers , orders WHERE customers.customerNumber = 	orders.customerNumber 									
												= get data from two table



3. 	SELECT customers.customerNumber , customerName, phone, city orderNumber, orderDate, status FROM customers , orders WHERE customers.customerNumber = 	orders.customerNumber AND status != 'shipped';

												= get customers data which are not shipped.




4. 	SELECT customers.customerNumber, customerName, phone, city , orderNumber, quantityOrdered , priceEach ,orderdetails.productCode, productName FROM customers, 	orderdetails, products WHERE ????

												= get data from multiple table.



* 	SELECT customers.customerNumber, customerName, phone, city , orderNumber, quantityOrdered , priceEach ,orderdetails.productCode, productName, quantityOrdered * 	priceEach AS TotalPrice FROM customers, orderdetails, products WHERE ????


												= multiply column and show result in a new column 




* 	SELECT customers.customerNumber, customerName, phone, city , quantityOrdered ,orderdetails.productCode, productName, quantityOrdered * priceEach AS TotalPrice 	FROM customers, orderdetails, products GROUP BY customerNumber				
												= group by ( per head koto order korce seta pawa jabe )



5. create view 		= save the query table

CREATE VIEW customer_orders AS
SELECT customers.customerNumber, customerName, phone, city , quantityOrdered ,orderdetails.productCode, productName, quantityOrdered * priceEach AS TotalPrice 	FROM customers, orderdetails, products GROUP BY customerNumber ;










